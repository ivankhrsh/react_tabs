{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","title","map","cn","href","onClick","selectTabId","content","App","useState","setsSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SACGJ,GAAW,0BAAuBA,EAAYK,SAGjD,sBAAK,UAAQ,gBAAb,UACE,qBAAKD,UAAU,gBAAf,SACE,6BACGP,EAAKS,KAAI,SAAAJ,GAAG,OACX,oBACEE,UAAWG,IAAG,CAAE,YAAaP,IAAgBE,IAC7C,UAAQ,MAFV,SAKE,mBACEM,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBAxBL,SAACP,GACfA,EAAIC,KAAOL,GACbC,EAAcG,GAsBaQ,CAAYR,IAH7B,SAKGA,EAAIG,SAPFH,EAAIC,WAejB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,iBC9CVd,EAAO,CAClB,CAAEM,GAAI,QAASE,MAAO,QAASM,QAAS,eACxC,CAAER,GAAI,QAASE,MAAO,QAASM,QAAS,eACxC,CAAER,GAAI,QAASE,MAAO,QAASM,QAAS,gBAG7BC,EAAU,WACrB,MAA2CC,mBAAShB,EAAK,IAAzD,mBAAOC,EAAP,KAAsBgB,EAAtB,KAEA,OACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,cAAeA,EAAcK,GAC7BJ,cAAee,KChBrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.976523a1.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { FC } from 'react';\nimport { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const selectTabId = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {selectedTab && `Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                className={cn({ 'is-active': selectedTab === tab })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => selectTabId(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTabId, setsSelectedTabId] = useState(tabs[0]);\n\n  return (\n    <Tabs\n      tabs={tabs}\n      selectedTabId={selectedTabId.id}\n      onTabSelected={setsSelectedTabId}\n    />\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}